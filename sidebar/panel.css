@namespace url("http://www.w3.org/1999/xhtml");

:root {
	--toolbar-height: 31px;
	--toolbar-button-size: 18px;
	--top-height: 60%;
	--splitter-height: 7px;
	--line-height: 19px;		/* UI density: Comfortable */
	--rss-tree-indent: 18px;	/* UI density: Comfortable */

	--bk-color-window: #F3F3F3;
	--bk-color-window-contrasted: #000000;
	--bk-color-dialog: #E3E3E3;
	--bk-color-dialog-contrasted: #000000;
	--bk-color-dialog-contrasted-alfa: #00000080;
	--bk-color-active: #F3C8BA;
	--bk-color-active-contrasted: #000000;
	--bk-color-info-window: #FFFEDF;
	--color-text: #000000;

	--font-default-fallback: Tahoma;

	--font-sidebar: Tahoma;
	--font-family-sidebar-fallback: var(--font-default-fallback), Verdana, Segoe, sans-serif;
	--font-family-sidebar: var(--font-sidebar), var(--font-family-sidebar-fallback);
}

:focus {
	outline: none;
}

html, body {
	height: 100%;
	line-height: var(--line-height);
	background-color: var(--bk-color-window);
	color: var(--color-text);
}

.top {
	position: fixed;
	top: var(--toolbar-height);
	width: 100%;
	height: var(--top-height);
	overflow-y: auto;
}

.bottom {
	position: fixed;
	top: calc(var(--top-height) + var(--splitter-height));
	width: 100%;
	height: auto;
	overflow-y: auto;
}

.splitter {
	position: fixed;
	top: var(--top-height);
	width: 100%;
	height: var(--splitter-height);
	background-color: #c0c0c0;
	cursor: n-resize;
	border-top: 1px #e0e0e0 solid;
	border-bottom: 1px #7f7f7f solid;
}

.toolbar {
	--buttons-spacer: 8px;
	width: 100%;
	height: var(--toolbar-height);
	background-color: var(--bk-color-dialog);
	border-top: 1px #7f7f7f solid;
	border-bottom: 1px #7f7f7f solid;
	padding: 5px var(--buttons-spacer);
	display: flex;
	justify-content: left;
}

.toolbar .button {
	width: var(--toolbar-button-size);
	height: var(--toolbar-button-size);
	min-width: var(--toolbar-button-size);
	border-radius: 2px;
	margin: auto var(--buttons-spacer) auto 0;
}

.toolbar .button:last-child {
	margin: auto 0;
}

.toolbar .button.alert {
	filter: drop-shadow(0 0 4px crimson);
}

.toolbar .button:hover {
	box-shadow: 0 0 4px 2px var(--bk-color-dialog-contrasted-alfa);
}

.toolbar .button:active {
	box-shadow: 0 0 4px 2px var(--bk-color-dialog-contrasted);
}

.spacer {
	width: var(--buttons-spacer);
	min-width: var(--buttons-spacer);
	height: 16px;
	pointer-events: none;
}

.springSpacer {
	margin: auto;
}

#filterContainer {
	--width-filter-image: 16px;
	--width-filter-text: 120px;
	--width-filter-reapply: var(--toolbar-button-size);
	--margin-right-filter-button: 4px;
	--width-filter-clear: var(--toolbar-button-size);
	--width-container: calc(var(--width-filter-image) + var(--width-filter-text) + var(--width-filter-reapply) + var(--margin-right-filter-button) + var(--width-filter-clear) + 2px);	/* 2px => border*/

	--transition-speed-factor: 0.8;
	--trans-duration-filter-button: calc(100ms * var(--transition-speed-factor));
	--trans-delay-filter-button: calc(200ms * var(--transition-speed-factor));
	--trans-duration-filter-box: calc(300ms * var(--transition-speed-factor));
	--trans-delay-filter-box: calc(0ms * var(--transition-speed-factor));

	display: flex;
}

#filterContainer .button {
	margin-right: 0;
}

#filter.button {
	transition: width var(--trans-duration-filter-button) linear var(--trans-delay-filter-button),
				min-width var(--trans-duration-filter-button) linear var(--trans-delay-filter-button);
}

#filterTextBoxContainer {
	display: flex;
	border: 0 solid #7f7f7f;
	overflow: hidden;
	width: 0;
	min-width: 0;
	height: 20px;
	pointer-events: none;
	transition: width var(--trans-duration-filter-box) ease-out var(--trans-delay-filter-box),
				min-width var(--trans-duration-filter-box) ease-out var(--trans-delay-filter-box),
				border-width var(--trans-duration-filter-box) ease-out var(--trans-delay-filter-box);
}

#filterTextBoxContainer.visibleOverflow {
	overflow: visible;
}

#imageFilter {
	width: var(--width-filter-image);
	height: var(--toolbar-button-size);
	background: -moz-Field url("/icons/filter-12.png") no-repeat 2px center;
}

#textFilter {
	border: 0;
	padding: 1px 1px 1px 0;
	width: var(--width-filter-text);
	height: var(--toolbar-button-size);
}

#filterTextBoxContainer .button {
	border-radius: 0;
}

#filterTextBoxContainer .button:not(:last-child) {
	margin-right: var(--margin-right-filter-button)
}

#filterContainer.switched > #filter.button {
	--trans-delay-filter-button: 0ms;
	width: 0;
	min-width: 0;
	margin-right: 0;
}

#filterContainer.switched > #filterTextBoxContainer {
	border-width: 1px;
	width: var(--width-container);
	min-width: var(--width-container);
	pointer-events: auto;
}

#filterContainer.filterTextOn #imageFilter,
#filterContainer.filterTextOn #textFilter {
	background-color: rgb(255, 220, 154);
}

#filterContainer.filterRegExpOn #imageFilter,
#filterContainer.filterRegExpOn #textFilter {
	background-color: rgb(177, 227, 255);
}

#filterContainer.filterTagOn #imageFilter,
#filterContainer.filterTagOn #textFilter {
	background-color: rgb(170, 255, 170);
}

#checkTreeFeeds {
	background: transparent url("/icons/reload.png") no-repeat center center;
}
#discoverfeed {
	background: transparent url("/icons/discover.png") no-repeat center center;
}
#expandall {
	background: transparent url("/icons/expandall.png") no-repeat center center;
}
#collapseall {
	background: transparent url("/icons/collapseall.png") no-repeat center center;
}
#filter {
	background: transparent url("/icons/filter.png") no-repeat center center;
}
#reapplyFilter {
	background: transparent url("/icons/filter-reapply.png") no-repeat center center;
}
#clearFilter {
	background: transparent url("/icons/filter-clear.png") no-repeat center center;
}
#preferences {
	background: transparent url("/icons/preferences.png") no-repeat center center;
}

.slideDownPanel {
	position: absolute;
	top: -500px;
	left: 0;
	box-sizing: border-box;
	max-width: 100%;
	min-width: 100%;
	width: 100%;
	background-color: var(--bk-color-dialog);
	box-shadow: 13px 13px 5px 0 rgba(0, 0, 0, 0.75);
	padding: 10px;
	border: solid black;
	border-width: 0 1px 1px;
	border-radius: 0 0 6px 6px;
	z-index: 1;
	transition: top 0.4s cubic-bezier(0.7, 0, 0.2, 2) 0s;
}

.slideDownPanel.visible {
	top: 0;
	min-width: 300px;
	width: calc(100% - 1px);
}

.disabled {
	pointer-events: none;
	filter: blur(1.5px);
}

.smallText {
	--text-height: 10px;
	line-height: calc(var(--text-height) * 1.2);
	font-family: Tahoma, Verdana, Segoe, sans-serif !important;
	font-weight: normal;
	font-size: var(--text-height) !important;
}

.dlgButton {
	padding: 1px 3px;
	background-color: rgb(251, 251, 251);
	border: 1px solid rgb(193, 193, 193);
	border-radius: 2px;
	height: 30px;
	width: 100px;
	text-align: center;
	margin-left: 10px;
}

.dlgButton:hover {
	background-color: rgb(235, 235, 235);
}

.dlgButton:active:hover {
	background-color: rgb(218, 218, 218);
}

#infoBar {
	position: absolute;
	max-width: 92%;
	z-index: 1;
	padding: 3px 9px;
	background-color: var(--bk-color-info-window);
	color: black;
	border: 2px solid #143cdc;
	border-radius: 0 12px 12px 12px;
	box-shadow: 8px 8px 5px 0 rgba(0,0,0,0.75);
	font-weight: normal;
	top: -99999px;
}

#infoBar.alertive {
	border-color: crimson;
}

#infoBar.rightToLeftBorder {
	border-radius: 12px 0 12px 12px;
}

/* .generalBorder overrides .rightToLeftBorder */
#infoBar.generalBorder {
	border-radius: 12px;
}

#infoBar.fadeIn {
	visibility: visible;
	opacity: 1;
	transition: visibility 0s linear 0s, opacity 500ms;
}

#infoBar.fadeOut {
	visibility: hidden;
	opacity: 0;
	transition: visibility 0s linear 500ms, opacity 500ms;
}

#infoBar .infoBarSymbol {
	font-size: 150%;
	font-weight: bolder;
	color: #143cdc;
}

#infoBar.alertive .infoBarSymbol {
	color: crimson;
}

#busyAnimTreeLoading {
	--size-image: 50px;
	--color-image: var(--bk-color-window-contrasted);
	display: none;
	width: var(--size-image);
	height: var(--size-image);
	margin: 10% auto auto auto;
	border-radius: 50%;
	border: 8px solid var(--color-image);
	border-color: var(--color-image) var(--color-image) var(--color-image) transparent;
	animation: busyAnimTreeLoadingFrames 0.7s linear infinite;
  }
  @keyframes busyAnimTreeLoadingFrames {
	0% { transform: rotate(0deg); }
	100% { transform: rotate(360deg); }
  }

  #busyAnimTreeLoading.visible {
	display: block;
  }
